{"version":3,"sources":["utils/index.js","components/Contract/index.js","components/CrowdFunding/index.js","components/Datos/index.js","components/Oficina/index.js","components/TronLinkInfo/index.js","components/TronLinkGuide/index.js","components/App/index.js","index.js","components/TronLinkGuide/TronLinkLogo.png"],"names":["utils","tronWeb","contract","setTronWeb","this","setContract","contractAddress","at","EarnTron","Component","constructor","props","super","deposit","bind","componentDidMount","Utils","window","trx","getBalance","balanceInSun","balanceInTRX","fromSun","parseInt","amount","document","getElementById","value","loc","location","href","indexOf","getString","split","GET","get","i","l","length","tmp","unescape","decodeURI","investors","call","registered","tarifa","sponsor","getAccount","account","accountAddress","address","fromHex","send","shouldPollResponse","callValue","alert","render","className","type","id","placeholder","class","onClick","state","totalInvestors","totalInvested","totalRefRewards","setInterval","setstate","esto","setState","Investors","_hex","Invested","RefRewards","data-toggle","toFixed","direccion","link2","link","balanceRef","totalRef","invested","paidAt","my","withdrawn","Link","withdraw","mydireccion","MYwithdrawable","My","style","text","data-wow-duration","color","data-wow-delay","TronLinkInfo","accountBalance","accountBandwidth","fetchAccountAddress","fetchAccountBalance","fetchAccountBandwidth","accountAddressInBase58","getBandwidth","WEBSTORE_URL","logo","src","TronLinkLogo","alt","openTronLink","open","TronLinkGuide","installed","target","rel","App","loggedIn","Promise","resolve","tronWebState","ready","tries","timer","TRONGRID_API","TronWeb","clearInterval","defaultAddress","hex","toHex","base58","on","root","ReactDOM","module","exports"],"mappings":"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","file":"static/js/main.1852e7a3.chunk.js","sourcesContent":["const utils = {\r\n  tronWeb: false,\r\n  contract: false,\r\n\r\n  setTronWeb(tronWeb) {\r\n    this.tronWeb = tronWeb;\r\n  },\r\n\r\n  async setContract(tronWeb, contractAddress) {\r\n    this.contract = await tronWeb.contract().at(contractAddress);\r\n  }\r\n};\r\n\r\nexport default utils;\r\n","\r\n/// La direccion de su contrato acá ///////////////////////////////////\r\nconst contractAddress = \"TV1R4Vqw3eiabXfaYB42YAeadXYSzXwcwt\";\r\n\r\nexport default contractAddress;","import React, { Component } from \"react\";\r\nimport Utils from \"../../utils\";\r\nimport \"./CrowdFunding.scss\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nexport default class EarnTron extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.deposit = this.deposit.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n  };\r\n\r\n\r\n  async deposit() {\r\n\r\n    const balanceInSun = await window.tronWeb.trx.getBalance(); //number\r\n    var balanceInTRX = window.tronWeb.fromSun(balanceInSun); //string\r\n    balanceInTRX = parseInt(balanceInTRX);//number\r\n\r\n    let amount = document.getElementById(\"amount\").value;\r\n\r\n    if ( balanceInTRX >= amount+40 ){\r\n\r\n      var loc = document.location.href;\r\n      if(loc.indexOf('?')>0){\r\n          var getString = loc.split('?')[1];\r\n          var GET = getString.split('&');\r\n          var get = {};\r\n          for(var i = 0, l = GET.length; i < l; i++){\r\n              var tmp = GET[i].split('=');\r\n              get[tmp[0]] = unescape(decodeURI(tmp[1]));\r\n          }\r\n          var inversors = await Utils.contract.investors(get['ref']).call();\r\n\r\n          //console.log(inversors);\r\n\r\n          if ( inversors.registered ) {\r\n            document.getElementById('sponsor').value = get['ref']; \r\n          }else{\r\n            document.getElementById('sponsor').value = 'TXkyzBxJqjYj18Kg48rLv7ZEmx8ayptPoF';         \r\n          }\r\n          \r\n          \r\n      }else{\r\n\r\n          document.getElementById('sponsor').value = 'TXkyzBxJqjYj18Kg48rLv7ZEmx8ayptPoF'; \r\n      }\r\n\r\n      let tarifa = 0;\r\n\r\n      var sponsor = document.getElementById(\"sponsor\").value;\r\n\r\n      const account =  await window.tronWeb.trx.getAccount();\r\n      var accountAddress = account.address;\r\n      accountAddress = window.tronWeb.address.fromHex(accountAddress);\r\n\r\n      var investors = await Utils.contract.investors(accountAddress).call();\r\n\r\n      if (investors.registered) {\r\n        \r\n        sponsor = investors.sponsor;\r\n        \r\n      }\r\n\r\n      document.getElementById(\"amount\").value = \"\";\r\n\r\n      if ( amount >= 200){\r\n\r\n        return Utils.contract.deposit(tarifa, sponsor).send({\r\n          shouldPollResponse: true,\r\n          callValue: amount * 1000000 // converted to SUN\r\n        });\r\n\r\n      }else{\r\n        window.alert(\"El minimo de inversión es 200 TRX\");\r\n      }\r\n    \r\n      \r\n\r\n    }else{\r\n\r\n      window.alert(\"Debes dejar 40 TRX libres en tu cuenta para hacer la transacción\");\r\n\r\n    }\r\n    \r\n  };\r\n\r\n  render() {\r\n    \r\n    return (\r\n      \r\n      <div className=\"card wow bounceInUp\">\r\n          <i className=\"fa fa-diamond\"></i>\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">Gold Premium</h5>\r\n          <h6 className=\"card-text\">\r\n            Return: <strong>200%</strong><br></br>\r\n            <strong>2%</strong> per day<br></br>\r\n          </h6>\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <input type=\"text\" className=\"form-control\" id=\"amount\" placeholder=\"Min. 200 TRX\"></input>\r\n                <p className=\"card-text\">Debes tener ~40 TRX para hacer la transacción</p>\r\n              </div>\r\n            </form>\r\n          <button type=\"button\" class=\"btn btn-light\" onClick={() => this.deposit()}>Invertir</button>\r\n          \r\n        </div>\r\n      </div>\r\n        \r\n\r\n\r\n\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nexport default class EarnTron extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      totalInvestors: 0,\r\n      totalInvested: 0,\r\n      totalRefRewards: 0\r\n    };\r\n\r\n    this.totalInvestors = this.totalInvestors.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    setInterval(() => this.totalInvestors(),1000);\r\n  };\r\n\r\n  async totalInvestors() {\r\n\r\n    let esto = await Utils.contract.setstate().call();\r\n    //console.log(esto);\r\n    this.setState({\r\n      totalInvestors: parseInt(esto.Investors._hex),\r\n      totalInvested: parseInt(esto.Invested._hex)/1000000,\r\n      totalRefRewards: parseInt(esto.RefRewards._hex)/1000000\r\n\r\n    });\r\n\r\n  };\r\n\r\n  render() {\r\n    const { totalInvestors, totalInvested, totalRefRewards } = this.state;\r\n\r\n    return (\r\n      <div className=\"row counters\">\r\n            \r\n        <div className=\"col-lg-4 col-12 text-center\">\r\n          <span data-toggle=\"counter-up\">{totalInvestors}</span>\r\n          <p>Inversores Globales</p>\r\n        </div>\r\n\r\n        <div className=\"col-lg-4 col-12 text-center\">\r\n          <span data-toggle=\"counter-up\">{totalInvested.toFixed(2)} TRX</span>\r\n          <p>Invertido Global</p>\r\n        </div>\r\n\r\n        <div className=\"col-lg-4 col-12 text-center\">\r\n          <span data-toggle=\"counter-up\">{totalRefRewards.toFixed(2)} TRX</span>\r\n          <p>Recompensas  Globales Referidos</p>\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nexport default class EarnTron extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      direccion: \"\",\r\n      link2: \"#\",\r\n      link: \"Haz una inversión para obtener el LINK de referido\",\r\n      registered: false,\r\n      balanceRef: 0,\r\n      totalRef: 0,\r\n      invested: 0,\r\n      paidAt: 0,\r\n      my: 0,\r\n      withdrawn: 0\r\n\r\n    };\r\n\r\n    this.Investors = this.Investors.bind(this);\r\n    this.Link = this.Link.bind(this);\r\n    this.withdraw = this.withdraw.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    setInterval(() => this.Investors(),1000);\r\n    setInterval(() => this.Link(),1000);\r\n  };\r\n\r\n  async Link() {\r\n    const {registered} = this.state;\r\n    if(registered){\r\n\r\n      let loc = document.location.href;\r\n      if(loc.indexOf('?')>0){\r\n        loc = loc.split('?')[0]\r\n      }\r\n      let mydireccion = await window.tronWeb.trx.getAccount();\r\n      mydireccion = window.tronWeb.address.fromHex(mydireccion.address)\r\n      mydireccion = loc+'?ref='+mydireccion;\r\n      this.setState({\r\n        link2: mydireccion,\r\n        link: \"Presiona COPIAR para obtener el LINK de referido\"\r\n      });\r\n    }else{\r\n      this.setState({\r\n        link2: \"https://earntron.ml/\",\r\n        link: \"Haz una inversión para obtener el LINK de referido\"\r\n      });\r\n    }\r\n  }\r\n    \r\n\r\n  async Investors() {\r\n\r\n    let direccion = await window.tronWeb.trx.getAccount();\r\n    let esto = await Utils.contract.investors(direccion.address).call();\r\n    let My = await Utils.contract.MYwithdrawable().call();\r\n    //console.log(esto);\r\n    //console.log(My);\r\n    this.setState({\r\n      direccion: window.tronWeb.address.fromHex(direccion.address),\r\n      registered: esto.registered,\r\n      balanceRef: parseInt(esto.balanceRef._hex)/1000000,\r\n      totalRef: parseInt(esto.totalRef._hex)/1000000,\r\n      invested: parseInt(esto.invested._hex)/1000000,\r\n      paidAt: parseInt(esto.paidAt._hex)/1000000,\r\n      my: parseInt(My.amount._hex)/1000000,\r\n      withdrawn: parseInt(esto.withdrawn._hex)/1000000\r\n    });\r\n\r\n  };\r\n\r\n  async withdraw(){\r\n\r\n    const { balanceRef, my} = this.state;\r\n\r\n    var saldo = balanceRef+my;\r\n\r\n    if (saldo >= 200) {\r\n\r\n      await Utils.contract.withdraw().send();\r\n\r\n    }else{\r\n      window.alert(\"The minimum withdrawal is 200 TRX\");\r\n\r\n    }\r\n\r\n    \r\n  };\r\n\r\n\r\n  render() {\r\n    const { balanceRef, totalRef, invested,  withdrawn , my, direccion, link, link2} = this.state;\r\n\r\n    return (\r\n      \r\n      <div className=\"container\">\r\n\r\n        <header className=\"section-header\">\r\n          <h3>My Office:</h3>\r\n          <p style={{'text-align': 'center','max-width': '90%'}}>{direccion}<br></br>\r\n          <a href={link2}>{link}</a><br></br>\r\n          <CopyToClipboard text={link2}>\r\n            <button type=\"button\" className=\"btn btn-info\">COPIAR</button>\r\n          </CopyToClipboard>\r\n          </p>\r\n          \r\n        </header>\r\n\r\n        <div className=\"row\">\r\n\r\n          <div className=\"col-md-6 col-lg-5 offset-lg-1 wow bounceInUp\" data-wow-duration=\"1.4s\">\r\n            <div className=\"box\">\r\n              <div className=\"icon\"><i className=\"ion-ios-analytics-outline\" style={{color: '#ff689b'}}></i></div>\r\n              <h4 className=\"title\"><a href=\"#services\">{invested} TRX</a></h4>\r\n              <p className=\"description\">Total invertido</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-6 col-lg-5 wow bounceInUp\" data-wow-duration=\"1.4s\">\r\n            <div className=\"box\">\r\n              <div className=\"icon\"><i className=\"ion-ios-bookmarks-outline\" style={{color: '#e9bf06'}}></i></div>\r\n              <h4 className=\"title\"><a href=\"#services\">{totalRef} TRX</a></h4>\r\n              <p className=\"description\">Total ganancias por referidos</p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-6 col-lg-5 offset-lg-1 wow bounceInUp\" data-wow-delay=\"0.1s\" data-wow-duration=\"1.4s\">\r\n            <div className=\"box\">\r\n              <div className=\"icon\"><i className=\"ion-ios-paper-outline\" style={{color: '#3fcdc7'}}></i></div>\r\n              <p className=\"description\">Mi balance</p>\r\n              <h4 className=\"title\"><a href=\"#services\">{my} TRX</a></h4>\r\n              \r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-6 col-lg-5 wow bounceInUp\" data-wow-delay=\"0.1s\" data-wow-duration=\"1.4s\">\r\n            <div className=\"box\">\r\n              <div className=\"icon\"><i className=\"ion-ios-paper-outline\" style={{color: '#3fcdc7'}}></i></div>\r\n              <p className=\"description\">Balance por referidos</p>\r\n              <h4 className=\"title\"><a href=\"#services\"> {balanceRef} TRX</a></h4>\r\n              \r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-6 col-lg-5 offset-lg-1 wow bounceInUp\" data-wow-delay=\"0.1s\" data-wow-duration=\"1.4s\">\r\n            <div className=\"box\">\r\n              <div className=\"icon\"><i className=\"ion-ios-speedometer-outline\" style={{color:'#41cf2e'}}></i></div>\r\n              <h4 className=\"title\"><a href=\"#services\">Disponible</a></h4>\r\n              <p className=\"description\">{balanceRef+my} TRX <button type=\"button\" className=\"btn btn-info\" onClick={() => this.withdraw()}>Retirar</button></p>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-6 col-lg-5 wow bounceInUp\" data-wow-delay=\"0.2s\" data-wow-duration=\"1.4s\">\r\n            <div className=\"box\">\r\n              <div className=\"icon\"><i className=\"ion-ios-clock-outline\" style={{color: '#4680ff'}}></i></div>\r\n              <h4 className=\"title\"><a href=\"#services\">Retirado</a></h4>\r\n              <p className=\"description\">{withdrawn} TRX</p>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    \r\n\r\n\r\n\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./TronLinkInfo.scss\";\r\n\r\nexport default class TronLinkInfo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      accountAddress: \"Billetera NO conectada\",\r\n      accountBalance: \"Billetera NO conectada\",\r\n      accountBandwidth: \"Billetera NO conectada\"\r\n    };\r\n  }\r\n\r\n  // Uncomment each call one at a time to see your account information filled out\r\n  componentDidMount() {\r\n    setInterval(() => this.fetchAccountAddress(),1000);\r\n    setInterval(() => this.fetchAccountBalance(),1000);\r\n    setInterval(() => this.fetchAccountBandwidth(),1000);\r\n  }\r\n\r\n  // // The function below will return an object with address, balance, create_time,\r\n  // // account_resource;\r\n  async fetchAccountAddress() {\r\n    const account = await window.tronWeb.trx.getAccount();\r\n    const accountAddress = account.address; // HexString(Ascii)\r\n     const accountAddressInBase58 = window.tronWeb.address.fromHex(\r\n       accountAddress\r\n     ); // Base58\r\n\r\n    this.setState({\r\n      accountAddress: accountAddressInBase58\r\n    });\r\n  }\r\n  //\r\n  // // The function below will return the account balance in SUN as a number\r\n  async fetchAccountBalance() {\r\n    const balanceInSun = await window.tronWeb.trx.getBalance(); //number\r\n    const balanceInTRX = window.tronWeb.fromSun(balanceInSun); //string\r\n    //const changeBackToSun = window.tronWeb.toSun(balanceInTRX); //string\r\n\r\n    this.setState({\r\n      //accountBalance: balanceInSun // Muestra el balance en SUN\r\n      accountBalance: balanceInTRX\r\n    });\r\n  }\r\n  //\r\n  // // La funcion aqui abajo muestra el ancho de banda como un numero\r\n  async fetchAccountBandwidth() {\r\n    const accountBandwidth = await window.tronWeb.trx.getBandwidth(); // number\r\n\r\n    this.setState({\r\n      accountBandwidth: accountBandwidth\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n    const { accountAddress, accountBalance, accountBandwidth,} = this.state;\r\n    return (\r\n      <div className=\"col-lg-5 mb-5\">\r\n        <div className=\"card wow bounceInUp\">\r\n            <i className=\"fa fa-address-card-o\"></i>\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">Información de la cuenta</h5>\r\n            <h6 className=\"card-text\">\r\n              Dirección:<br></br>\r\n               <strong><span>{accountAddress}</span></strong><br></br><br></br>\r\n              Balance:<br></br>\r\n               <strong><span>{accountBalance} TRX</span></strong><br></br><br></br>\r\n              Bandwidth:<br></br>\r\n               <strong><span>{accountBandwidth}</span></strong><br></br>\r\n              \r\n            </h6>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport TronLinkLogo from './TronLinkLogo.png';\r\nimport './TronLinkGuide.scss';\r\n\r\nconst WEBSTORE_URL = 'https://chrome.google.com/webstore/detail/ibnejdfjmmkpcnlpebklmnkoeoihofec/';\r\n\r\nconst logo = (\r\n    <div className='logo col-xs-12 col-md-4 text-center'>\r\n        <img src={ TronLinkLogo } className=\"img-fluid\" alt='TronLink logo' />\r\n    </div>\r\n);\r\n\r\nconst openTronLink = () => {\r\n    window.open(WEBSTORE_URL, '_blank');\r\n};\r\n\r\nconst TronLinkGuide = props => {\r\n    const {\r\n        installed = false\r\n    } = props;\r\n\r\n    if(!installed) {\r\n        return (\r\n            <div className='tronLink row' onClick={ openTronLink }>\r\n                <div className='info col-xs-12 col-md-8'>\r\n                    <h1>TronLink Required</h1>\r\n                    <p>\r\n                        To create a post or tip others you must install TronLink. TronLink is a TRON wallet for the browser\r\n                        that can be <a href={ WEBSTORE_URL } target='_blank' rel='noopener noreferrer'>installed from the Chrome Webstore</a>.\r\n                        Once installed, return back and refresh the page.\r\n                    </p>\r\n                </div>\r\n                { logo }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className='tronLink hover' onClick={ openTronLink }>\r\n            <div className='info'>\r\n                <h1>Log in Required</h1>\r\n                <p>\r\n                    TronLink is installed but you must first log in. Open TronLink from the browser bar and set up your\r\n                    first wallet or decrypt a previously-created wallet.\r\n                </p>\r\n            </div>\r\n            { logo }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TronLinkGuide;","import React, { Component } from \"react\";\r\nimport TronWeb from \"tronweb\";\r\n\r\nimport Utils from \"../../utils\";\r\nimport CrowdFunding from \"../CrowdFunding\";\r\nimport Datos from \"../Datos\";\r\nimport Oficina from \"../Oficina\";\r\nimport TronLinkInfo from \"../TronLinkInfo\";\r\nimport TronLinkGuide from \"../TronLinkGuide\";\r\nimport \"./App.scss\";\r\n\r\nconst FOUNDATION_ADDRESS = \"TWiWt5SEDzaEqS6kE5gandWMNfxR2B5xzg\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      tronWeb: {\r\n        installed: false,\r\n        loggedIn: false\r\n      }\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await new Promise(resolve => {\r\n      const tronWebState = {\r\n        installed: !!window.tronWeb,\r\n        loggedIn: window.tronWeb && window.tronWeb.ready\r\n      };\r\n\r\n      if (tronWebState.installed) {\r\n        this.setState({\r\n          tronWeb: tronWebState\r\n        });\r\n\r\n        return resolve();\r\n      }\r\n\r\n      let tries = 0;\r\n\r\n      const timer = setInterval(() => {\r\n        if (tries >= 10) {\r\n          const TRONGRID_API = \"https://api.trongrid.io\";\r\n\r\n          window.tronWeb = new TronWeb(\r\n            TRONGRID_API,\r\n            TRONGRID_API,\r\n            TRONGRID_API\r\n          );\r\n\r\n          this.setState({\r\n            tronWeb: {\r\n              installed: false,\r\n              loggedIn: false\r\n            }\r\n          });\r\n          clearInterval(timer);\r\n          return resolve();\r\n        }\r\n\r\n        tronWebState.installed = !!window.tronWeb;\r\n        tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\r\n\r\n        if (!tronWebState.installed) {\r\n          return tries++;\r\n        }\r\n\r\n        this.setState({\r\n          tronWeb: tronWebState\r\n        });\r\n\r\n        resolve();\r\n      }, 100);\r\n    });\r\n\r\n    if (!this.state.tronWeb.loggedIn) {\r\n      // Set default address (foundation address) used for contract calls\r\n      // Directly overwrites the address object if TronLink disabled the\r\n      // function call\r\n      window.tronWeb.defaultAddress = {\r\n        hex: window.tronWeb.address.toHex(FOUNDATION_ADDRESS),\r\n        base58: FOUNDATION_ADDRESS\r\n      };\r\n\r\n      window.tronWeb.on(\"addressChange\", () => {\r\n        if (this.state.tronWeb.loggedIn) {\r\n          return;\r\n        }\r\n\r\n        this.setState({\r\n          tronWeb: {\r\n            installed: true,\r\n            loggedIn: true\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    Utils.setTronWeb(window.tronWeb);\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.tronWeb.installed) return <TronLinkGuide />;\r\n\r\n    if (!this.state.tronWeb.loggedIn) return <TronLinkGuide installed />;\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <section id=\"why-us\" className=\"wow fadeIn\">\r\n            <div className=\"container\">\r\n              <header className=\"section-header\">\r\n                  <h3>Has tu inversión</h3>\r\n              </header>\r\n              <div  className=\"row row-eq-height justify-content-center\">\r\n                <CrowdFunding />\r\n                <TronLinkInfo />\r\n              </div>\r\n              <div >\r\n                <Datos />\r\n              </div>\r\n            </div>\r\n          </section>\r\n          \r\n          <section id=\"services\" className=\"section-bg\">\r\n            <Oficina /> \r\n          </section>\r\n        </div>\r\n      </div>\r\n      \r\n\r\n\r\n      );\r\n\r\n  }\r\n}\r\nexport default App;\r\n\r\n// {tWeb()}\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\n\r\nimport App from \"./components/App\";\r\n\r\n\r\nvar root = document.getElementById(\"root\");\r\n\r\n\r\nReactDOM.render(<App />, root);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/TronLinkLogo.d3a8f115.png\";"],"sourceRoot":""}