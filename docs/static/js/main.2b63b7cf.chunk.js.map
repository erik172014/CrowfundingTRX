{"version":3,"sources":["utils/index.js","cons.js","components/Contract/index.js","components/CrowdFunding/index.js","components/Datos/index.js","components/Oficina/index.js","components/TronLinkGuide/index.js","components/App/index.js","index.js","components/TronLinkGuide/TronLinkLogo.png"],"names":["utils","tronWeb","contract","setTronWeb","this","setContract","contractAddress","at","EarnTron","props","state","min","deposit","bind","estado","Utils","window","setInterval","trx","getAccount","accountAddress","address","fromHex","inicio","substr","fin","texto","document","getElementById","innerHTML","tronUSDT","cons","contractUSDT","allowance","call","aprovado","parseInt","remaining","_hex","setState","deposito","amount","value","parseFloat","loc","location","href","indexOf","getString","split","GET","get","i","l","length","tmp","unescape","decodeURI","investors","inversors","console","log","registered","sponsor","send","alert","approve","className","type","id","placeholder","onClick","Component","constructor","super","totalInvestors","totalInvested","totalRefRewards","componentDidMount","setstate","esto","Investors","Invested","RefRewards","render","url","src","alt","class","direccion","link","balanceRef","totalRef","invested","paidAt","my","withdrawn","Link","withdraw","mydireccion","MYwithdrawable","My","cosa","available","toFixed","style","text","WEBSTORE_URL","logo","TronLinkLogo","openTronLink","open","TronLinkGuide","installed","target","rel","FOUNDATION_ADDRESS","App","loggedIn","Promise","resolve","tronWebState","ready","tries","timer","TRONGRID_API","TronWeb","clearInterval","defaultAddress","hex","toHex","base58","on","root","ReactDOM","module","exports"],"mappings":"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","file":"static/js/main.2b63b7cf.chunk.js","sourcesContent":["const utils = {\n  tronWeb: false,\n  contract: false,\n\n  setTronWeb(tronWeb) {\n    this.tronWeb = tronWeb;\n  },\n\n  async setContract(tronWeb, contractAddress) {\n    this.contract = await tronWeb.contract().at(contractAddress);\n  }\n};\n\nexport default utils;\n","const proxy = \"https://proxy-ewozx.herokuapp.com/\";\nconst PRU = \"shasta1.\";// shasta1. para inhabilitar red de pruebas\n\nconst WS = \"T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb\";//T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb recibe los huerfanos por defecto\n\nconst SC = \"TEEuz4218xVwT1EJ61DqxywPgqGDmS9SqW\";// direccion del contrato\n\nconst USDT = \"TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t\";// USDT contract or token trc20\n\nexport default {proxy, PRU, WS,  SC, USDT};\n","import cons from \"../../cons.js\";\n/// La direccion de su contrato acá ///////////////////////////////////\nconst contractAddress = cons.SC;\n\nexport default contractAddress;","import React, { Component } from \"react\";\nimport Utils from \"../../utils\";\nimport contractAddress from \"../Contract\";\n\nimport cons from \"../../cons.js\";\n\nexport default class EarnTron extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n      min: 10\n\n    };\n\n    this.deposit = this.deposit.bind(this);\n    this.estado = this.estado.bind(this);\n  }\n\n  async componentDidMount() {\n    await Utils.setContract(window.tronWeb, contractAddress);\n    this.estado();\n    setInterval(() => this.estado(),3*1000);\n  };\n\n  async estado(){\n\n    var accountAddress =  await window.tronWeb.trx.getAccount();\n    accountAddress = window.tronWeb.address.fromHex(accountAddress.address);\n\n    var inicio = accountAddress.substr(0,4);\n    var fin = accountAddress.substr(-4);\n\n    var texto = inicio+\"...\"+fin;\n\n    document.getElementById(\"login\").innerHTML = '<a href=\"https://tronscan.io/#/address/'+accountAddress+'\" class=\"logibtn gradient-btn\">'+texto+'</a>';\ndocument.getElementById(\"contrato\").innerHTML = '<a class=\"scroll\" target=\"_black\" rel=\"noopener noreferrer\" href=\"https://tronscan.io/#/contract/'+contractAddress+'/code\">Contrato</a>';\n\n    var min = 10;\n\n    var tronUSDT = await window.tronWeb;\n    var contractUSDT = await tronUSDT.contract().at(cons.USDT);\n\n    var aprovado = await contractUSDT.allowance(accountAddress,contractAddress).call();\n    aprovado = parseInt(aprovado.remaining._hex);\n\n    if (aprovado > 0) {\n      aprovado = \"Depositar\"\n    }else{\n      aprovado = \"Aprobar\"\n    }\n\n\n    this.setState({\n      min: min,\n      deposito: aprovado\n    });\n\n  }\n\n\n  async deposit() {\n\n\n    const { min } = this.state;\n\n    var amount = document.getElementById(\"amount\").value;\n    amount = parseFloat(amount);\n    amount = parseInt(amount*1000000);\n\n    var accountAddress =  await window.tronWeb.trx.getAccount();\n    accountAddress = window.tronWeb.address.fromHex(accountAddress.address);\n\n    var tronUSDT = await window.tronWeb;\n    var contractUSDT = await tronUSDT.contract().at(cons.USDT);\n\n    var aprovado = await contractUSDT.allowance(accountAddress,contractAddress).call();\n    aprovado = parseInt(aprovado.remaining._hex);\n\n    if ( aprovado >= amount ){\n\n        var loc = document.location.href;\n        if(loc.indexOf('?')>0){\n            var getString = loc.split('?')[1];\n            var GET = getString.split('&');\n            var get = {};\n            for(var i = 0, l = GET.length; i < l; i++){\n                var tmp = GET[i].split('=');\n                get[tmp[0]] = unescape(decodeURI(tmp[1]));\n            }\n\n            if (get['ref']) {\n              tmp = get['ref'].split('#');\n\n              var inversors = await Utils.contract.investors(tmp[0]).call();\n\n              console.log(inversors);\n\n              if ( inversors.registered ) {\n                document.getElementById('sponsor').value = tmp[0];\n              }else{\n                document.getElementById('sponsor').value = cons.WS;\n              }\n            }else{\n               document.getElementById('sponsor').value = cons.WS;\n            }\n\n        }else{\n\n            document.getElementById('sponsor').value = cons.WS;\n        }\n\n        var sponsor = document.getElementById(\"sponsor\").value;\n\n        var investors = await Utils.contract.investors(accountAddress).call();\n\n        if (investors.registered) {\n\n          sponsor = investors.sponsor;\n\n        }\n\n\n        if ( amount >= min){\n\n          document.getElementById(\"amount\").value = \"\";\n\n          await Utils.contract.deposit(amount,sponsor).send();\n\n        }else{\n          window.alert(\"Please enter an amount greater than 10 USDT\");\n          document.getElementById(\"amount\").value = 10;\n        }\n\n\n\n    }else{\n\n      if (amount > 10 && aprovado > 10) {\n\n        \n\n        if ( amount > aprovado) {\n          if (aprovado <= 0) {\n            document.getElementById(\"amount\").value = 10;\n            window.alert(\"You do not have enough funds in your account you place at least 10 USDT\");\n          }else{\n            document.getElementById(\"amount\").value = 10;\n            window.alert(\"You must leave 50 TRX free in your account to make the transaction\");\n          }\n\n\n\n        }else{\n\n          document.getElementById(\"amount\").value = amount;\n          window.alert(\"You must leave 50 TRX free in your account to make the transaction\");\n\n        }\n      }else{\n        \n        if (aprovado <= 0) {\n          \n          await contractUSDT.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send();\n        }else{\n          window.alert(\"You do not have enough funds in your account you place at least 250 TRX\");\n        }\n      }\n    }\n\n\n  };\n\n\n  render() {\n\n    var { min } = this.state;\n\n    min = \"Min. \"+min+\" USDT\";\n\n\n    return (\n\n\n        <div>\n          <h6 className=\"text-center\">\n            Return: <strong>200%</strong><br />\n          </h6>\n\n          <div className=\"form-group text-center\">\n            <input type=\"number\" className=\"form-control mb-20 text-center\" id=\"amount\" placeholder={min}></input>\n            <p className=\"card-text\">You must have ~ 50 TRX to make the transaction</p>\n\n            <a href=\"#amount\" className=\"gradient-btn v2\" onClick={() => this.deposit()}>{this.state.deposito}</a>\n\n\n\n\n          </div>\n\n        </div>\n\n\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Utils from \"../../utils\";\nimport contractAddress from \"../Contract\";\n\nexport default class EarnTron extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      totalInvestors: 0,\n      totalInvested: 0,\n      totalRefRewards: 0\n    };\n\n    this.totalInvestors = this.totalInvestors.bind(this);\n  }\n\n  async componentDidMount() {\n    await Utils.setContract(window.tronWeb, contractAddress);\n    setInterval(() => this.totalInvestors(),1000);\n  };\n\n  async totalInvestors() {\n\n    let esto = await Utils.contract.setstate().call();\n    //console.log(esto);\n    this.setState({\n      totalInvestors: parseInt(esto.Investors._hex),\n      totalInvested: parseInt(esto.Invested._hex)/1000000,\n      totalRefRewards: parseInt(esto.RefRewards._hex)/1000000\n\n    });\n\n  };\n\n  render() {\n    const { totalInvestors, totalInvested, totalRefRewards } = this.state;\n\n    var url = 'https://tronscan.io/#/contract/'+contractAddress+'/code';\n\n    return (\n      <div className=\"single-about-area wow fadeInUp\">\n          <div className=\"container\">\n              <div className=\"row\">\n                  <div className=\"col-lg-4\">\n                      <a href={url} className=\"single-about\">\n                          <div className=\"single-about-img\">\n                              <img src=\"assets/img/about-icon-1.png\" alt=\"\" />\n                          </div>\n                          <div className=\"single-about-text\">\n                              <h1>{totalInvestors}</h1>\n                              <p>Global Investors</p>\n                          </div>\n                      </a>\n                  </div>\n                  <div className=\"col-lg-4\">\n                      <a href={url} className=\"single-about\">\n                          <div className=\"single-about-img\">\n                              <img src=\"assets/img/about-icon-2.png\" alt=\"\" />\n                          </div>\n                          <div className=\"single-about-text\">\n                              <h1>{totalInvested} USDT</h1>\n                              <p>Global Inverted</p>\n                          </div>\n                      </a>\n                  </div>\n                  <div className=\"col-lg-4\">\n                      <a href={url} className=\"single-about\">\n                          <div className=\"single-about-img\">\n                              <img src=\"assets/img/about-icon-3.png\" alt=\"\" />\n                          </div>\n                          <div className=\"single-about-text\">\n                              <h1>{totalRefRewards} USDT</h1>\n                              <p>Global Referral Rewards</p>\n                          </div>\n                      </a>\n                  </div>\n              </div>\n          </div>\n          <div class=\"space-90\"></div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nimport Utils from \"../../utils\";\nimport contractAddress from \"../Contract\";\n\nexport default class EarnTron extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      direccion: \"\",\n      link: \"Haz una inversión para obtener el LINK de referido\",\n      registered: false,\n      balanceRef: 0,\n      totalRef: 0,\n      invested: 0,\n      paidAt: 0,\n      my: 0,\n      withdrawn: 0\n\n    };\n\n    this.Investors = this.Investors.bind(this);\n    this.Link = this.Link.bind(this);\n    this.withdraw = this.withdraw.bind(this);\n  }\n\n  async componentDidMount() {\n    await Utils.setContract(window.tronWeb, contractAddress);\n    setInterval(() => this.Investors(),300);\n    setInterval(() => this.Link(),1000);\n  };\n\n  async Link() {\n    const {registered} = this.state;\n    if(registered){\n\n      let loc = document.location.href;\n      if(loc.indexOf('?')>0){\n        loc = loc.split('?')[0]\n      }\n      let mydireccion = await window.tronWeb.trx.getAccount();\n      mydireccion = window.tronWeb.address.fromHex(mydireccion.address)\n      mydireccion = loc+'?ref='+mydireccion;\n      this.setState({\n        link: mydireccion,\n      });\n    }else{\n      this.setState({\n        link: \"Haz una inversión para obtener el LINK de referido\",\n      });\n    }\n  }\n\n\n  async Investors() {\n\n    let direccion = await window.tronWeb.trx.getAccount();\n    let esto = await Utils.contract.investors(direccion.address).call();\n    let My = await Utils.contract.MYwithdrawable().call();\n    //console.log(esto);\n    //console.log(My);\n    this.setState({\n      direccion: window.tronWeb.address.fromHex(direccion.address),\n      registered: esto.registered,\n      balanceRef: parseInt(esto.balanceRef._hex)/1000000,\n      totalRef: parseInt(esto.totalRef._hex)/1000000,\n      invested: parseInt(esto.invested._hex)/1000000,\n      paidAt: parseInt(esto.paidAt._hex)/1000000,\n      my: parseInt(My.amount._hex)/1000000,\n      withdrawn: parseInt(esto.withdrawn._hex)/1000000\n    });\n\n  };\n\n  async withdraw(){\n    var cosa = await Utils.contract.withdraw().send();\n    console.log(cosa);\n  };\n\n\n  render() {\n    var { balanceRef, totalRef, invested,  withdrawn , my, direccion, link} = this.state;\n\n    var available = (balanceRef+my);\n    available = available.toFixed(6);\n    available = parseFloat(available);\n\n    balanceRef = balanceRef.toFixed(2);\n    balanceRef = parseFloat(balanceRef);\n\n    totalRef = totalRef.toFixed(2);\n    totalRef = parseFloat(totalRef);\n\n    invested = invested.toFixed(2);\n    invested = parseFloat(invested);\n\n    withdrawn = withdrawn.toFixed(2);\n    withdrawn = parseFloat(withdrawn);\n\n    my = my.toFixed(6);\n    my = parseFloat(my);\n\n    return (\n\n      <section  id=\"office\" className=\"simple-services-area section-gap\">\n        <div className=\"container text-center\">\n          <header className=\"section-header\">\n            <h3 className=\"white\"><span style={{'fontweight': 'bold'}}>\n              Mi Oficina:</span>\n            </h3>\n            <p>{direccion}</p><br />\n            <h3 className=\"white\" >Link de referido:</h3>\n            <h6 className=\"aboutus-area\" style={{'padding': '1.5em', 'fontSize': '11px'}}><a href={link}>{link}</a><br /><br />\n            <CopyToClipboard text={link}>\n              <button type=\"button\" style={{'cursor': 'pointer'}} className=\"btn btn-primary\">Copiar al portapapeles</button>\n            </CopyToClipboard>\n            </h6>\n            <hr></hr>\n\n          </header>\n\n          <div className=\"row\">\n            <div className=\"col-sm-4 single-services\">\n              <h4 className=\"pt-30 pb-20\">{invested} USDT</h4>\n              <p>\n                Total invertido\n              </p>\n            </div>\n\n            <div className=\"col-sm-4 single-services\">\n              <h4 className=\"pt-30 pb-20\">{totalRef} USDT</h4>\n              <p>\n                Ganado por referidos\n\n              </p>\n            </div>\n\n            <div className=\"col-sm-4 single-services\">\n              <h4 className=\"pt-30 pb-20\">{my} USDT</h4>\n              <p>\n                Ganancias\n              </p>\n            </div>\n\n            <div className=\"col-sm-4 single-services\">\n              <h4 className=\"pt-30 pb-20\">{available} USDT</h4>\n              <p>\n                Disponible\n              </p>\n\n            </div>\n\n            <div className=\"col-sm-4 single-services\">\n              <h4 className=\"pt-30 pb-20\">{available} USDT</h4>\n              <p>\n                <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.withdraw()}>Retirar</button>\n\n              </p>\n            </div>\n\n            <div className=\"col-sm-4 single-services\">\n              <h4 className=\"pt-30 pb-20\">{withdrawn} USDT</h4>\n              <p>\n                Retirado\n\n              </p>\n            </div>\n\n          </div>\n        </div>\n      </section>\n\n    );\n  }\n}\n","import React from 'react';\n\nimport TronLinkLogo from './TronLinkLogo.png';\n\n\nconst WEBSTORE_URL = 'https://chrome.google.com/webstore/detail/ibnejdfjmmkpcnlpebklmnkoeoihofec/';\n\nconst logo = (\n    <div className='col-sm-4 text-center'>\n        <img src={ TronLinkLogo } className=\"img-fluid\" alt='TronLink logo' />\n    </div>\n);\n\nconst openTronLink = () => {\n    window.open(WEBSTORE_URL, '_blank');\n};\n\nconst TronLinkGuide = props => {\n    const {\n        installed = false\n    } = props;\n\n    if(!installed) {\n        return (\n            <div className='row' onClick={ openTronLink }>\n                <div className='col-sm-8'>\n                    <h1>TronLink Required</h1>\n                    <p>\n                        To create a post or tip others you must install TronLink. TronLink is a TRON wallet for the browser\n                        that can be <a href={ WEBSTORE_URL } target='_blank' rel='noopener noreferrer'>installed from the Chrome Webstore</a>.\n                        Once installed, return back and refresh the page.\n                    </p>\n                </div>\n                { logo }\n            </div>\n        );\n    }\n\n    return (\n    <>  <a href='/'>\n        <div className='tronLink row' style={{'padding': '3em','decoration':'none','color':'black'}}>\n\n            <div className='info col-sm-8'>\n                <h1>Log in Required</h1>\n                <p>\n                    TronLink is installed but you must first log in. Open TronLink from the browser bar and set up your\n                    first wallet or decrypt a previously created wallet.\n                </p>\n            </div>\n            { logo }\n        </div>\n\n        </a>\n\n    </>\n    );\n};\n\nexport default TronLinkGuide;\n","import React, { Component } from \"react\";\nimport TronWeb from \"tronweb\";\n\nimport Utils from \"../../utils\";\nimport CrowdFunding from \"../CrowdFunding\";\nimport Datos from \"../Datos\";\nimport Oficina from \"../Oficina\";\nimport TronLinkGuide from \"../TronLinkGuide\";\n\n\nconst FOUNDATION_ADDRESS = \"TWiWt5SEDzaEqS6kE5gandWMNfxR2B5xzg\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tronWeb: {\n        installed: false,\n        loggedIn: false\n      }\n    };\n  }\n\n  async componentDidMount() {\n    await new Promise(resolve => {\n      const tronWebState = {\n        installed: !!window.tronWeb,\n        loggedIn: window.tronWeb && window.tronWeb.ready\n      };\n\n      if (tronWebState.installed) {\n        this.setState({\n          tronWeb: tronWebState\n        });\n\n        return resolve();\n      }\n\n      let tries = 0;\n\n      const timer = setInterval(() => {\n        if (tries >= 10) {\n\n          const TRONGRID_API = \"https://api.trongrid.io\";\n\n          window.tronWeb = new TronWeb(\n            TRONGRID_API,\n            TRONGRID_API,\n            TRONGRID_API\n          );\n\n          this.setState({\n            tronWeb: {\n              installed: false,\n              loggedIn: false\n            }\n          });\n          clearInterval(timer);\n          return resolve();\n        }\n\n        tronWebState.installed = !!window.tronWeb;\n        tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\n\n        if (!tronWebState.installed) {\n          return tries++;\n        }\n\n        this.setState({\n          tronWeb: tronWebState\n        });\n\n        resolve();\n      }, 100);\n    });\n\n    if (!this.state.tronWeb.loggedIn) {\n      // Set default address (foundation address) used for contract calls\n      // Directly overwrites the address object if TronLink disabled the\n      // function call\n      window.tronWeb.defaultAddress = {\n        hex: window.tronWeb.address.toHex(FOUNDATION_ADDRESS),\n        base58: FOUNDATION_ADDRESS\n      };\n\n      window.tronWeb.on(\"addressChange\", () => {\n        if (this.state.tronWeb.loggedIn) {\n          return;\n        }\n\n        this.setState({\n          tronWeb: {\n            installed: true,\n            loggedIn: true\n          }\n        });\n      });\n    }\n\n    Utils.setTronWeb(window.tronWeb);\n  }\n\n  render() {\n    if (!this.state.tronWeb.installed) return (\n      <>\n        <div className=\"container\">\n          <TronLinkGuide />\n        </div>\n      </>\n      );\n\n    if (!this.state.tronWeb.loggedIn) return (\n      <>\n        <div className=\"container\">\n          <TronLinkGuide installed />\n        </div>\n      </>\n      );\n\n    return (\n\n      <>\n\n      <section className=\"convert-area\" id=\"convert\">\n        <div className=\"container\">\n          <div className=\"convert-wrap\">\n            <div className=\"row justify-content-center align-items-center flex-column pb-30\">\n              <h1 className=\"text-white\">Make your investment</h1>\n            </div>\n            <div className=\"row justify-content-center align-items-start\">\n\n              <div className=\"col-lg-12 cols\">\n                <CrowdFunding />\n              </div>\n\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <Oficina />\n\n      <div class=\"space-90\"></div>\n\n      <Datos />\n\n      </>\n    );\n\n  }\n}\nexport default App;\n\n// {tWeb()}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\n\n\nvar root = document.getElementById(\"root\");\n\n\nReactDOM.render(<App />, root);\n\n\n\n\n\n\n\n","module.exports = __webpack_public_path__ + \"static/media/TronLinkLogo.d3a8f115.png\";"],"sourceRoot":""}