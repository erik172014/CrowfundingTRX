{"version":3,"sources":["utils/index.js","components/Contract/index.js","components/CrowdFunding/index.js","components/Datos/index.js","components/Oficina/index.js","components/TronLinkInfo/index.js","components/TronLinkGuide/index.js","components/App/index.js","index.js","components/TronLinkGuide/TronLinkLogo.png"],"names":["utils","tronWeb","contract","setTronWeb","this","setContract","contractAddress","at","EarnTron","Component","constructor","props","super","deposit","bind","componentDidMount","Utils","window","trx","getBalance","balanceInSun","balanceInTRX","fromSun","parseFloat","amount","document","getElementById","value","console","log","loc","location","href","indexOf","getString","split","GET","get","i","l","length","tmp","unescape","decodeURI","investors","call","registered","tarifa","sponsor","getAccount","account","accountAddress","address","fromHex","send","shouldPollResponse","callValue","alert","render","className","type","id","placeholder","onClick","state","totalInvestors","totalInvested","totalRefRewards","setInterval","setstate","esto","setState","parseInt","Investors","_hex","Invested","RefRewards","data-toggle","toFixed","direccion","link2","link","balanceRef","totalRef","invested","paidAt","my","withdrawn","Link","withdraw","mydireccion","MYwithdrawable","My","saldo","balanceCONTRACT","withdrawable","sacar","style","text","data-wow-duration","data-wow-delay","TronLinkInfo","accountBalance","accountBandwidth","fetchAccountAddress","fetchAccountBalance","fetchAccountBandwidth","accountAddressInBase58","getBandwidth","WEBSTORE_URL","logo","src","TronLinkLogo","alt","openTronLink","open","TronLinkGuide","installed","target","rel","App","loggedIn","Promise","resolve","tronWebState","ready","tries","timer","TRONGRID_API","TronWeb","clearInterval","defaultAddress","hex","toHex","base58","on","root","ReactDOM","module","exports"],"mappings":"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","file":"static/js/main.98717950.chunk.js","sourcesContent":["const utils = {\r\n  tronWeb: false,\r\n  contract: false,\r\n\r\n  setTronWeb(tronWeb) {\r\n    this.tronWeb = tronWeb;\r\n  },\r\n\r\n  async setContract(tronWeb, contractAddress) {\r\n    this.contract = await tronWeb.contract().at(contractAddress);\r\n  }\r\n};\r\n\r\nexport default utils;\r\n","\r\n/// La direccion de su contrato acá ///////////////////////////////////\r\nconst contractAddress = \"TV1R4Vqw3eiabXfaYB42YAeadXYSzXwcwt\";\r\n\r\nexport default contractAddress;","import React, { Component } from \"react\";\r\nimport Utils from \"../../utils\";\r\nimport \"./CrowdFunding.scss\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nexport default class EarnTron extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.deposit = this.deposit.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n  };\r\n\r\n\r\n  async deposit() {\r\n\r\n    const balanceInSun = await window.tronWeb.trx.getBalance(); //number\r\n    var balanceInTRX = window.tronWeb.fromSun(balanceInSun); //string\r\n    balanceInTRX = parseFloat(balanceInTRX);//number\r\n\r\n    var amount = document.getElementById(\"amount\").value;\r\n\r\n    amount = parseFloat(amount);\r\n\r\n    console.log(balanceInTRX);\r\n    console.log(amount+40);\r\n\r\n    if ( balanceInTRX >= amount+40 ){\r\n\r\n      var loc = document.location.href;\r\n      if(loc.indexOf('?')>0){\r\n          var getString = loc.split('?')[1];\r\n          var GET = getString.split('&');\r\n          var get = {};\r\n          for(var i = 0, l = GET.length; i < l; i++){\r\n              var tmp = GET[i].split('=');\r\n              get[tmp[0]] = unescape(decodeURI(tmp[1]));\r\n          }\r\n          var inversors = await Utils.contract.investors(get['ref']).call();\r\n\r\n          //console.log(inversors);\r\n\r\n          if ( inversors.registered ) {\r\n            //document.getElementById('sponsor').value = get['ref']; \r\n            document.getElementById('sponsor').value = 'TXkyzBxJqjYj18Kg48rLv7ZEmx8ayptPoF';\r\n          }else{\r\n            document.getElementById('sponsor').value = 'TXkyzBxJqjYj18Kg48rLv7ZEmx8ayptPoF';         \r\n          }\r\n          \r\n          \r\n      }else{\r\n\r\n          document.getElementById('sponsor').value = 'TXkyzBxJqjYj18Kg48rLv7ZEmx8ayptPoF'; \r\n      }\r\n\r\n      let tarifa = 0;\r\n\r\n      var sponsor = document.getElementById(\"sponsor\").value;\r\n\r\n      const account =  await window.tronWeb.trx.getAccount();\r\n      var accountAddress = account.address;\r\n      accountAddress = window.tronWeb.address.fromHex(accountAddress);\r\n\r\n      var investors = await Utils.contract.investors(accountAddress).call();\r\n\r\n      if (investors.registered) {\r\n        \r\n        sponsor = investors.sponsor;\r\n        \r\n      }\r\n\r\n      document.getElementById(\"amount\").value = \"\";\r\n\r\n      if ( amount >= 200){\r\n\r\n        return Utils.contract.deposit(tarifa, sponsor).send({\r\n          shouldPollResponse: true,\r\n          callValue: amount * 1000000 // converted to SUN\r\n        });\r\n\r\n      }else{\r\n        window.alert(\"El minimo de inversión es 200 TRX\");\r\n        document.getElementById(\"amount\").value = 200;\r\n      }\r\n    \r\n      \r\n\r\n    }else{\r\n\r\n      window.alert(\"Debes dejar 40 TRX libres en tu cuenta para hacer la transacción\");\r\n\r\n      if ( amount > balanceInTRX) {\r\n        document.getElementById(\"amount\").value = balanceInTRX-40;\r\n\r\n      }else{\r\n        document.getElementById(\"amount\").value = amount-40;\r\n        \r\n      }\r\n\r\n      \r\n\r\n    }\r\n    \r\n  };\r\n\r\n  render() {\r\n    \r\n    return (\r\n      \r\n      <div className=\"card wow bounceInUp\">\r\n          <i className=\"fa fa-diamond\"></i>\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">Gold Premium</h5>\r\n          <h6 className=\"card-text\">\r\n            Return: <strong>200%</strong><br></br>\r\n            <strong>2%</strong> per day<br></br>\r\n          </h6>\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <input type=\"number\" className=\"form-control\" id=\"amount\" placeholder=\"Min. 200 TRX\"></input>\r\n                <p className=\"card-text\">Debes tener ~40 TRX para hacer la transacción</p>\r\n              </div>\r\n            </form>\r\n          <button type=\"button\" className=\"btn btn-light\" onClick={() => this.deposit()}>Invertir</button>\r\n          \r\n        </div>\r\n      </div>\r\n        \r\n\r\n\r\n\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nexport default class EarnTron extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      totalInvestors: 0,\r\n      totalInvested: 0,\r\n      totalRefRewards: 0\r\n    };\r\n\r\n    this.totalInvestors = this.totalInvestors.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    setInterval(() => this.totalInvestors(),1000);\r\n  };\r\n\r\n  async totalInvestors() {\r\n\r\n    let esto = await Utils.contract.setstate().call();\r\n    //console.log(esto);\r\n    this.setState({\r\n      totalInvestors: parseInt(esto.Investors._hex),\r\n      totalInvested: parseInt(esto.Invested._hex)/1000000,\r\n      totalRefRewards: parseInt(esto.RefRewards._hex)/1000000\r\n\r\n    });\r\n\r\n  };\r\n\r\n  render() {\r\n    const { totalInvestors, totalInvested, totalRefRewards } = this.state;\r\n\r\n    return (\r\n      <div className=\"row counters\">\r\n            \r\n        <div className=\"col-lg-4 col-12 text-center\">\r\n          <span data-toggle=\"counter-up\">{totalInvestors}</span>\r\n          <p>Inversores Globales</p>\r\n        </div>\r\n\r\n        <div className=\"col-lg-4 col-12 text-center\">\r\n          <span data-toggle=\"counter-up\">{totalInvested.toFixed(2)} TRX</span>\r\n          <p>Invertido Global</p>\r\n        </div>\r\n\r\n        <div className=\"col-lg-4 col-12 text-center\">\r\n          <span data-toggle=\"counter-up\">{totalRefRewards.toFixed(2)} TRX</span>\r\n          <p>Recompensas  Globales Referidos</p>\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nexport default class EarnTron extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      direccion: \"\",\r\n      link2: \"#\",\r\n      link: \"Haz una inversión para obtener el LINK de referido\",\r\n      registered: false,\r\n      balanceRef: 0,\r\n      totalRef: 0,\r\n      invested: 0,\r\n      paidAt: 0,\r\n      my: 0,\r\n      withdrawn: 0\r\n\r\n    };\r\n\r\n    this.Investors = this.Investors.bind(this);\r\n    this.Link = this.Link.bind(this);\r\n    this.withdraw = this.withdraw.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    setInterval(() => this.Investors(),1000);\r\n    setInterval(() => this.Link(),1000);\r\n  };\r\n\r\n  async Link() {\r\n    const {registered} = this.state;\r\n\r\n    if(registered){\r\n\r\n      let loc = document.location.href;\r\n      if(loc.indexOf('?')>0){\r\n        loc = loc.split('?')[0]\r\n      }\r\n      let mydireccion = await window.tronWeb.trx.getAccount();\r\n      mydireccion = window.tronWeb.address.fromHex(mydireccion.address)\r\n      mydireccion = loc+'?ref='+mydireccion;\r\n      this.setState({\r\n        link2: mydireccion,\r\n        link: \"Presiona COPIAR para obtener el LINK de referido\"\r\n      });\r\n    }else{\r\n      this.setState({\r\n        link2: \"https://earntron.ml/\",\r\n        link: \"Haz una inversión para obtener el LINK de referido\"\r\n      });\r\n    }\r\n  }\r\n    \r\n\r\n  async Investors() {\r\n\r\n    let direccion = await window.tronWeb.trx.getAccount();\r\n    let esto = await Utils.contract.investors(direccion.address).call();\r\n    let My = await Utils.contract.MYwithdrawable().call();\r\n    //console.log(esto);\r\n    //console.log(My);\r\n    this.setState({\r\n      direccion: window.tronWeb.address.fromHex(direccion.address),\r\n      registered: esto.registered,\r\n      balanceRef: parseInt(esto.balanceRef._hex)/1000000,\r\n      totalRef: parseInt(esto.totalRef._hex)/1000000,\r\n      invested: parseInt(esto.invested._hex)/1000000,\r\n      paidAt: parseInt(esto.paidAt._hex)/1000000,\r\n      my: parseInt(My.amount._hex)/1000000,\r\n      withdrawn: parseInt(esto.withdrawn._hex)/1000000\r\n    });\r\n\r\n  };\r\n\r\n  async withdraw(){\r\n\r\n    const { balanceRef, my} = this.state;\r\n\r\n    var saldo = balanceRef+my;\r\n\r\n    var balanceCONTRACT = await window.tronWeb.trx.getBalance(contractAddress);\r\n    balanceCONTRACT = balanceCONTRACT/1000000;\r\n\r\n    //console.log(balanceCONTRACT);\r\n\r\n    var balanceInTRX = await window.tronWeb.trx.getBalance(); //number\r\n    balanceInTRX = balanceInTRX/1000000;\r\n\r\n    var direccion = await window.tronWeb.trx.getAccount();\r\n    var sacar = await Utils.contract.withdrawable(direccion.address).call();\r\n    sacar = parseInt(sacar.amount._hex)/1000000;\r\n\r\n    //console.log(sacar);\r\n\r\n    if (saldo >= 200) {\r\n\r\n      if ( balanceCONTRACT >= sacar ) {   \r\n\r\n        if (balanceInTRX >= 40 ) {\r\n\r\n          await Utils.contract.withdraw().send();\r\n\r\n        }else{\r\n          window.alert(\"En tu wallet debe haber almenos 40 TRX para fee de transferencia\");\r\n        }\r\n      }else{\r\n        window.alert(\"El contrato no tiene suficiente TRX intenta nuevamente mas tarde\");\r\n      }\r\n\r\n    }else{\r\n      window.alert(\"El minimo para retirar es 200 TRX\");\r\n\r\n    }\r\n\r\n    \r\n  };\r\n\r\n\r\n  render() {\r\n    const { balanceRef, totalRef, invested,  withdrawn , my, direccion, link, link2} = this.state;\r\n\r\n    return (\r\n      \r\n      <div className=\"container\">\r\n\r\n        <header className=\"section-header\">\r\n          <h3>My Office:</h3>\r\n          <p style={{'textAlign': 'center','maxWidth': '90%'}}>{direccion}<br></br>\r\n          <a href={link2}>{link}</a><br></br>\r\n          <CopyToClipboard text={link2}>\r\n            <button type=\"button\" className=\"btn btn-info\">COPIAR</button>\r\n          </CopyToClipboard>\r\n          </p>\r\n          \r\n        </header>\r\n\r\n        <div className=\"row\">\r\n\r\n          <div className=\"col-md-6 col-lg-5 offset-lg-1 wow bounceInUp\" data-wow-duration=\"1.4s\">\r\n            <div className=\"box\">\r\n              <div className=\"icon\"><i className=\"ion-ios-analytics-outline\" style={{'color': '#ff689b'}}></i></div>\r\n              <h4 className=\"title\"><a href=\"#services\">{invested} TRX</a></h4>\r\n              <p className=\"description\">Total invertido</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-6 col-lg-5 wow bounceInUp\" data-wow-duration=\"1.4s\">\r\n            <div className=\"box\">\r\n              <div className=\"icon\"><i className=\"ion-ios-bookmarks-outline\" style={{'color': '#e9bf06'}}></i></div>\r\n              <h4 className=\"title\"><a href=\"#services\">{totalRef} TRX</a></h4>\r\n              <p className=\"description\">Total ganancias por referidos</p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-6 col-lg-5 offset-lg-1 wow bounceInUp\" data-wow-delay=\"0.1s\" data-wow-duration=\"1.4s\">\r\n            <div className=\"box\">\r\n              <div className=\"icon\"><i className=\"ion-ios-paper-outline\" style={{'color': '#3fcdc7'}}></i></div>\r\n              <p className=\"description\">Mi balance</p>\r\n              <h4 className=\"title\"><a href=\"#services\">{my} TRX</a></h4>\r\n              \r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-6 col-lg-5 wow bounceInUp\" data-wow-delay=\"0.1s\" data-wow-duration=\"1.4s\">\r\n            <div className=\"box\">\r\n              <div className=\"icon\"><i className=\"ion-ios-paper-outline\" style={{'color': '#3fcdc7'}}></i></div>\r\n              <p className=\"description\">Balance por referidos</p>\r\n              <h4 className=\"title\"><a href=\"#services\"> {balanceRef} TRX</a></h4>\r\n              \r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-6 col-lg-5 offset-lg-1 wow bounceInUp\" data-wow-delay=\"0.1s\" data-wow-duration=\"1.4s\">\r\n            <div className=\"box\">\r\n              <div className=\"icon\"><i className=\"ion-ios-speedometer-outline\" style={{'color':'#41cf2e'}}></i></div>\r\n              <h4 className=\"title\"><a href=\"#services\">Disponible</a></h4>\r\n              <p className=\"description\">\r\n                {balanceRef+my} TRX \r\n                <br /><button type=\"button\" className=\"btn btn-info\" onClick={() => this.withdraw()}>Retirar</button>\r\n\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-6 col-lg-5 wow bounceInUp\" data-wow-delay=\"0.2s\" data-wow-duration=\"1.4s\">\r\n            <div className=\"box\">\r\n              <div className=\"icon\"><i className=\"ion-ios-clock-outline\" style={{'color': '#4680ff'}}></i></div>\r\n              <h4 className=\"title\"><a href=\"#services\">Retirado</a></h4>\r\n              <p className=\"description\">{withdrawn} TRX</p>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    \r\n\r\n\r\n\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./TronLinkInfo.scss\";\r\n\r\nexport default class TronLinkInfo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      accountAddress: \"Billetera NO conectada\",\r\n      accountBalance: \"Billetera NO conectada\",\r\n      accountBandwidth: \"Billetera NO conectada\"\r\n    };\r\n  }\r\n\r\n  // Uncomment each call one at a time to see your account information filled out\r\n  componentDidMount() {\r\n    setInterval(() => this.fetchAccountAddress(),1000);\r\n    setInterval(() => this.fetchAccountBalance(),1000);\r\n    setInterval(() => this.fetchAccountBandwidth(),1000);\r\n  }\r\n\r\n  // // The function below will return an object with address, balance, create_time,\r\n  // // account_resource;\r\n  async fetchAccountAddress() {\r\n    const account = await window.tronWeb.trx.getAccount();\r\n    const accountAddress = account.address; // HexString(Ascii)\r\n     const accountAddressInBase58 = window.tronWeb.address.fromHex(\r\n       accountAddress\r\n     ); // Base58\r\n\r\n    this.setState({\r\n      accountAddress: accountAddressInBase58\r\n    });\r\n  }\r\n  //\r\n  // // The function below will return the account balance in SUN as a number\r\n  async fetchAccountBalance() {\r\n    const balanceInSun = await window.tronWeb.trx.getBalance(); //number\r\n    const balanceInTRX = window.tronWeb.fromSun(balanceInSun); //string\r\n    //const changeBackToSun = window.tronWeb.toSun(balanceInTRX); //string\r\n\r\n    this.setState({\r\n      //accountBalance: balanceInSun // Muestra el balance en SUN\r\n      accountBalance: balanceInTRX\r\n    });\r\n  }\r\n  //\r\n  // // La funcion aqui abajo muestra el ancho de banda como un numero\r\n  async fetchAccountBandwidth() {\r\n    const accountBandwidth = await window.tronWeb.trx.getBandwidth(); // number\r\n\r\n    this.setState({\r\n      accountBandwidth: accountBandwidth\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n    const { accountAddress, accountBalance, accountBandwidth,} = this.state;\r\n    return (\r\n      <div className=\"col-lg-5 mb-5\">\r\n        <div className=\"card wow bounceInUp\">\r\n            <i className=\"fa fa-address-card-o\"></i>\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">Información de la cuenta</h5>\r\n            <h6 className=\"card-text\">\r\n              Dirección:<br></br>\r\n               <strong><span>{accountAddress}</span></strong><br></br><br></br>\r\n              Balance:<br></br>\r\n               <strong><span>{accountBalance} TRX</span></strong><br></br><br></br>\r\n              Bandwidth:<br></br>\r\n               <strong><span>{accountBandwidth}</span></strong><br></br>\r\n              \r\n            </h6>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport TronLinkLogo from './TronLinkLogo.png';\r\nimport './TronLinkGuide.scss';\r\n\r\nconst WEBSTORE_URL = 'https://chrome.google.com/webstore/detail/ibnejdfjmmkpcnlpebklmnkoeoihofec/';\r\n\r\nconst logo = (\r\n    <div className='logo col-xs-12 col-md-4 text-center'>\r\n        <img src={ TronLinkLogo } className=\"img-fluid\" alt='TronLink logo' />\r\n    </div>\r\n);\r\n\r\nconst openTronLink = () => {\r\n    window.open(WEBSTORE_URL, '_blank');\r\n};\r\n\r\nconst TronLinkGuide = props => {\r\n    const {\r\n        installed = false\r\n    } = props;\r\n\r\n    if(!installed) {\r\n        return (\r\n            <div className='tronLink row' onClick={ openTronLink }>\r\n                <div className='info col-xs-12 col-md-8'>\r\n                    <h1>TronLink Required</h1>\r\n                    <p>\r\n                        To create a post or tip others you must install TronLink. TronLink is a TRON wallet for the browser\r\n                        that can be <a href={ WEBSTORE_URL } target='_blank' rel='noopener noreferrer'>installed from the Chrome Webstore</a>.\r\n                        Once installed, return back and refresh the page.\r\n                    </p>\r\n                </div>\r\n                { logo }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className='tronLink hover' onClick={ openTronLink }>\r\n            <div className='info'>\r\n                <h1>Log in Required</h1>\r\n                <p>\r\n                    TronLink is installed but you must first log in. Open TronLink from the browser bar and set up your\r\n                    first wallet or decrypt a previously-created wallet.\r\n                </p>\r\n            </div>\r\n            { logo }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TronLinkGuide;","import React, { Component } from \"react\";\r\nimport TronWeb from \"tronweb\";\r\n\r\nimport Utils from \"../../utils\";\r\nimport CrowdFunding from \"../CrowdFunding\";\r\nimport Datos from \"../Datos\";\r\nimport Oficina from \"../Oficina\";\r\nimport TronLinkInfo from \"../TronLinkInfo\";\r\nimport TronLinkGuide from \"../TronLinkGuide\";\r\nimport \"./App.scss\";\r\n\r\nconst FOUNDATION_ADDRESS = \"TWiWt5SEDzaEqS6kE5gandWMNfxR2B5xzg\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      tronWeb: {\r\n        installed: false,\r\n        loggedIn: false\r\n      }\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await new Promise(resolve => {\r\n      const tronWebState = {\r\n        installed: !!window.tronWeb,\r\n        loggedIn: window.tronWeb && window.tronWeb.ready\r\n      };\r\n\r\n      if (tronWebState.installed) {\r\n        this.setState({\r\n          tronWeb: tronWebState\r\n        });\r\n\r\n        return resolve();\r\n      }\r\n\r\n      let tries = 0;\r\n\r\n      const timer = setInterval(() => {\r\n        if (tries >= 10) {\r\n          const TRONGRID_API = \"https://api.trongrid.io\";\r\n\r\n          window.tronWeb = new TronWeb(\r\n            TRONGRID_API,\r\n            TRONGRID_API,\r\n            TRONGRID_API\r\n          );\r\n\r\n          this.setState({\r\n            tronWeb: {\r\n              installed: false,\r\n              loggedIn: false\r\n            }\r\n          });\r\n          clearInterval(timer);\r\n          return resolve();\r\n        }\r\n\r\n        tronWebState.installed = !!window.tronWeb;\r\n        tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\r\n\r\n        if (!tronWebState.installed) {\r\n          return tries++;\r\n        }\r\n\r\n        this.setState({\r\n          tronWeb: tronWebState\r\n        });\r\n\r\n        resolve();\r\n      }, 100);\r\n    });\r\n\r\n    if (!this.state.tronWeb.loggedIn) {\r\n      // Set default address (foundation address) used for contract calls\r\n      // Directly overwrites the address object if TronLink disabled the\r\n      // function call\r\n      window.tronWeb.defaultAddress = {\r\n        hex: window.tronWeb.address.toHex(FOUNDATION_ADDRESS),\r\n        base58: FOUNDATION_ADDRESS\r\n      };\r\n\r\n      window.tronWeb.on(\"addressChange\", () => {\r\n        if (this.state.tronWeb.loggedIn) {\r\n          return;\r\n        }\r\n\r\n        this.setState({\r\n          tronWeb: {\r\n            installed: true,\r\n            loggedIn: true\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    Utils.setTronWeb(window.tronWeb);\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.tronWeb.installed) return <TronLinkGuide />;\r\n\r\n    if (!this.state.tronWeb.loggedIn) return <TronLinkGuide installed />;\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <section id=\"why-us\" className=\"wow fadeIn\">\r\n            <div className=\"container\">\r\n              <header className=\"section-header\">\r\n                  <h3>Has tu inversión</h3>\r\n              </header>\r\n              <div  className=\"row row-eq-height justify-content-center\">\r\n                <CrowdFunding />\r\n                <TronLinkInfo />\r\n              </div>\r\n              <div >\r\n                <Datos />\r\n              </div>\r\n            </div>\r\n          </section>\r\n          \r\n          <section id=\"services\" className=\"section-bg\">\r\n            <Oficina /> \r\n          </section>\r\n        </div>\r\n      </div>\r\n      \r\n\r\n\r\n      );\r\n\r\n  }\r\n}\r\nexport default App;\r\n\r\n// {tWeb()}\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\n\r\nimport App from \"./components/App\";\r\n\r\n\r\nvar root = document.getElementById(\"root\");\r\n\r\n\r\nReactDOM.render(<App />, root);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/TronLinkLogo.d3a8f115.png\";"],"sourceRoot":""}